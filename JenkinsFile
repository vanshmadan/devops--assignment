@Library('jenkins-shared-lib') _

pipeline {
  agent any

  environment {
    DOCKER_IMAGE = "registry.digitalocean.com/at-apps-registry/flask-app:latest"
    KUBECONFIG_CRED = 'kubeconfig'
    DO_API_TOKEN_CRED = 'do-api-token'
  }

  stages {

    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Docker Image') {
      steps {
        dir('DevOpsHiring') {
          script {
            buildDockerImage(image: env.DOCKER_IMAGE)
          }
        }
      }
    }

    stage('Push to DOCR') {
      steps {
        withCredentials([string(credentialsId: env.DO_API_TOKEN_CRED, variable: 'DO_API_TOKEN')]) {
          dir('DevOpsHiring') {
            script {
              pushToDOCR(image: env.DOCKER_IMAGE, token: DO_API_TOKEN)
            }
          }
        }
      }
    }

 
    stage('Deploy to Kubernetes') {
      steps {
        withKubeConfig([
          credentialsId: 'kubeconfig',
          serverUrl: 'https://b166cf10-39ff-4320-b1d6-119c7316f177.k8s.ondigitalocean.com' // Optional; helps plugin inject context
        ]) {
          sh '''
            sudo curl -LO "https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl apply -f kubernetes-yamls/configmap.yaml
            kubectl apply -f kubernetes-yamls/deployment.yaml
            kubectl apply -f kubernetes-yamls/service.yaml
          '''
        }
      }
    }
 
    stage('Verify Deployment') {
      steps {
        script {
          verifyDeployment(url: "http://139.59.55.164/")
        }
      }
    }
  }
}
